apply plugin: 'base'

ext.springVersion='3.1.2.RELEASE'
ext.tilesVersion='2.2.2'
ext.springSecurityVersion='3.1.1.RELEASE'
ext.springSwfVersion='2.3.1.RELEASE'
ext.hibernateVersion='4.1.5.SP1'
ext.hibernateValidatorVersion='4.3.0.Final'
ext.ehCacheVersion='2.5.3'

ext.tomcatVersion = '7.0.29'
ext.cargoVersion = '1.1.3'

ext.webProjects = subprojects.findAll { project -> project.name.endsWith('mountain')}

buildscript {
    repositories {
        add(new org.apache.ivy.plugins.resolver.URLResolver()) {
            name = 'GitHub'
            addArtifactPattern 'http://cloud.github.com/downloads/[organisation]/[module]/[module]-[revision].[ext]'
        }
    }

    dependencies { 
		classpath 'bmuschko:gradle-tomcat-plugin:0.9.3' 
		classpath 'bmuschko:gradle-cargo-plugin:0.5.4'
   }
}

allprojects {

    description='Mountain Application'

    group = 'com.mountain'

    version = '1.0.0'

    repositories {
        mavenRepo url: 'http://maven.springframework.org/release'
		mavenRepo url: 'http://maven.springframework.org/snapshot'
        mavenCentral()
        mavenRepo url: 'http://maven.springframework.org/milestone'
        mavenRepo url: 'https://repository.jboss.org/nexus/content/repositories/releases/'
        mavenRepo url: 'http://download.java.net/maven/glassfish/org/glassfish/'
    }

    tasks.withType(Compile) {
        options.compilerArgs << "-g"
    }
}

configure(webProjects) {
    apply plugin: 'war'
    apply plugin: 'jetty'
    apply plugin: 'tomcat'
    apply plugin: 'cargo'

    dependencies() {
        compile project(':mountain-shared'), project(':mountain-web-resources')

        compile "org.apache.tiles:tiles-servlet:$tilesVersion"
        compile "org.apache.tiles:tiles-jsp:$tilesVersion"
        compile "org.apache.tiles:tiles-api:$tilesVersion"
        compile "org.apache.tiles:tiles-core:$tilesVersion"

        runtime "jstl:jstl:1.2"

        providedCompile 'javax.servlet:javax.servlet-api:3.0.1'

        tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
                "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}"
        tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
            exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'

	 cargo "org.codehaus.cargo:cargo-core-uberjar:${cargoVersion}", 
		"org.codehaus.cargo:cargo-ant:${cargoVersion}"
        }
    }

    cargo {
        containerId = 'tomcat7x'
        port = 8080

        local {
            homeDir = file('container/apache-tomcat-7.0.26')
            output = file('container/apache-tomcat-7.0.26/output.log')
        }
    }

    war {   
        version = '' //We do this to make the wars versionless, when they are deployed with cargo, the context
                     //root of the app is equal to the file name, which is equal to the sample directory name.
     }

    task systemTest(type: Test) {
        include '**/*FrontendTest.*'
	dependsOn(war)

        doFirst {
		cargoStartLocal.execute()
        }
    }

    test {
        exclude '**/*FrontendTest.*'
    }

}

subprojects() {
    apply plugin: 'java'
    apply plugin: 'eclipse-wtp'
    apply plugin: 'idea'

    sourceCompatibility=1.6
    targetCompatibility=1.6
    
    dependencies() {
        compile "org.springframework:spring-orm:$springVersion"
        compile "org.springframework:spring-aop:$springVersion"
        compile "org.springframework:spring-webmvc:$springVersion"
        compile "org.springframework:spring-oxm:$springVersion"
        
        compile 'org.slf4j:jcl-over-slf4j:1.6.6'
        compile 'ch.qos.logback:logback-classic:1.0.6'
        compile 'org.apache.commons:commons-lang3:3.0.1'
        compile 'com.thoughtworks.xstream:xstream:1.4.2'
        compile 'com.h2database:h2:1.3.168'
        compile 'cglib:cglib-nodep:2.2.2'
        compile 'org.aspectj:aspectjrt:1.6.12'
        compile 'org.aspectj:aspectjweaver:1.6.12'        

        compile "org.hibernate:hibernate-entitymanager:$hibernateVersion"
        compile "org.hibernate:hibernate-core:$hibernateVersion"
        compile "org.hibernate:hibernate-ehcache:$hibernateVersion"
        compile "org.hibernate:hibernate-validator:$hibernateValidatorVersion"
        compile "net.sf.ehcache:ehcache-core:$ehCacheVersion"

        compile 'com.lowagie:itext:2.1.7'
        compile 'net.sourceforge.jexcelapi:jxl:2.6.12'
        compile 'org.codehaus.jackson:jackson-mapper-asl:1.9.9'  
        compile 'commons-codec:commons-codec:1.6'
        compile 'joda-time:joda-time:2.0'
        
        testCompile 'junit:junit:4.9'
        testCompile "org.springframework:spring-test:$springVersion"
    }
    
    eclipse { 
        project.natures "org.springframework.ide.eclipse.core.springnature" 
    }

}

task wrapper(type: Wrapper) { gradleVersion = '1.0' }